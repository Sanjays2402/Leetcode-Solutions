/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res = 0;
    int comp(TreeNode* root)
    {
        if(root == NULL)
            return 0;
        
        return max(comp(root->left), comp(root->right)) + 1;
    }
    void helper(TreeNode* root)
    {
        if(root == NULL)
            return;

        res = max(comp(root->left) + comp(root->right), res);
        helper(root->left);
        helper(root->right);
    }
    int diameterOfBinaryTree(TreeNode* root) {
        
        helper(root);
        
        return res;
    }
};
