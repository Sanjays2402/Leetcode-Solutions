/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>> res;
        if(root == NULL)
            return res;
        
        int level = 0;
        queue<TreeNode*> q;
        q.push(root);
        
        while(q.size())
        {
            int size = q.size();
            vector<int> temp;
            while(size --)
            {
                TreeNode* pre = q.front();
                q.pop();
                temp.push_back(pre->val);
                if(pre->left)
                    q.push(pre->left);
                if(pre->right)
                    q.push(pre->right);
            }
            if(level % 2)
                reverse(temp.begin(), temp.end());
            
            res.push_back(temp);
            level++;
        }
        return res;
    }
};
