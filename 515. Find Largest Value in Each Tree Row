/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<int, int> hash;
    void dfs(TreeNode* root, int level)
    {
        if(root == NULL)
            return ;
        
        if(hash.find(level) == hash.end())
            hash[level] = root->val;
        else
            hash[level] = max(hash[level], root->val);
        
        if(root->left)
            dfs(root->left, level+1);
        if(root->right)
            dfs(root->right, level+1);
    }
    
    vector<int> largestValues(TreeNode* root) {
        vector<int> res;
        if(root == NULL)
            return res;
        
        dfs(root, 0);
        for(auto it: hash)
            res.push_back(it.second);
        
        return res;
        
    }
};
