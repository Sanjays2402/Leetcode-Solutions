class Solution {
public:
    int trap(vector<int>& height) {
        
        if(height.size()==0)
            return 0;
        int n=height.size(), maxi=INT_MIN, sum=0;
        vector<int> leftmax(n);
        leftmax[0]=0;
        for(int i=1; i<n; i++)
        {
            maxi=max(height[i-1], maxi);
            leftmax[i]=maxi;
        }
        vector<int> rightmax(n);
        rightmax[n-1]=0;
        maxi=INT_MIN;
        for(int i=n-2; i>=0; i--)
        {
            maxi=max(height[i+1], maxi);
            rightmax[i]=maxi;
        }
        
        vector<int> water(n);
        for(int i=0; i<n; i++)
        {
            water[i]=min(leftmax[i], rightmax[i]);
        }
        
        for(int i=0; i<n; i++)
        {
            if(water[i]>height[i])
                sum += water[i]-height[i];
        }
        
        return sum;
    }
};
